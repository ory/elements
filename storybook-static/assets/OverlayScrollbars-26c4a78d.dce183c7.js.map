{"version":3,"file":"OverlayScrollbars-26c4a78d.dce183c7.js","sources":["../../node_modules/@storybook/components/dist/esm/OverlayScrollbars-26c4a78d.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, a as __rest } from './index-b45716e8.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"names":["obj","_typeof","Symbol","iterator","constructor","prototype","OverlayScrollbars$1","exports","module","global","factory","document","undefined","window","commonjsGlobal","undefined$1","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","firstLetterToUpper","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","x","innerWidth","documentElement","body","innerHeight","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","bind","windowSize","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","isA","def","isArray","type","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","extend","fromIndex","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","callback","isArrayLike","isFunction","value","tokens","match","join","elem","selector","nodeList","parentNode","querySelectorAll","el","strategy","child","insertAdjacentElement","insertAdjacentHTML","nodeType","val","parseCSSVal","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","inArray","setCSSVal","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","push","css","isEmptyObject","startNextAnimationInQ","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","stop","max","parseFloat","setAnimationValue","start","pos","speacialEasing","startTime","frame","clearQ","jumpToEnd","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","e","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","stripAndCollapse","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","matches","is","elementIsVisible","childs","_each","animate","jump","_stop","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","setupResponsiveEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","addDestroyEventListener","resizeObserverObj","disconnect","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","changed","hostSize","checkCache","_hostSizeChanged","refreshScrollbarsAutoHide","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","destroy","setupHostMouseTouchEvents","hostOnMouseMove","hostOnMouseEnter","hostOnMouseLeave","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","bodyMinSizeChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","disconnectMutationObservers","connectMutationObservers","oldSize","setupResizeObserver","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","updateOnLoadCallback","newOptions","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","doClearInterval","clearInterval","updateTextarea","keyCode","setInterval","isSizeAffectingCSSProperty","nativeOverlayScrollbarsAreActive","textareaOnKeyDown","textareaOnKeyUp","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","contentOnTransitionEnd","viewportOnScroll","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","horizontalElements","verticalElements","resetScrollbarDOM","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","increaseTrackScrollAmount","decreaseTrackScrollAmount","isTouchEvent","getPreparedScrollbarsOption","onMouseTouchDownContinue","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","getPointerPosition","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","documentDragMove","documentKeyDown","documentKeyUp","documentOnSelectStart","stopClickEventPropagation","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onHandleMouseTouchDown","onTrackMouseTouchDown","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","takeRecords","option","changedOps","setObjectPropVal","setOptions","getObjectPropVal","extName","removeExt","pop","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","currValue","allowedValues","isX","coordinateProps","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","checkSettingsStringValue","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","generateMargin","getPerAxisValue","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","getFinalScroll","getRawScroll","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","extended","changePropertyName","destroyed","prepare","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","initBodyScroll","_bodyMouseTouchDownListener","setupStructureEvents","setupScrollbarEvents","setupScrollbarCornerEvents","createMutationObservers","hostOnResized","activeElement","focus","valid","construct","pluginTargetElements","optsIsPlainObj","initOverlayScrollbarsStatics","OverlayScrollbarsInstance","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","__rest","osTargetRef","useRef","useEffect","mergeHostClassNames","assign","ref","_jsx","_osInstance$getElemen","osClassNames"],"mappings":"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"}