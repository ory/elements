{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.8",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@author",
          "syntaxKind": "block"
        },
        {
          "tagName": "@module",
          "syntaxKind": "block"
        },
        {
          "tagName": "@mergeModuleWith",
          "syntaxKind": "block"
        },
        {
          "tagName": "@type",
          "syntaxKind": "block"
        },
        {
          "tagName": "@typedef",
          "syntaxKind": "block"
        },
        {
          "tagName": "@callback",
          "syntaxKind": "block"
        },
        {
          "tagName": "@prop",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@property",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@group",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@groupDescription",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@disableGroups",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@category",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@categoryDescription",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@hidden",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@ignore",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@class",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@abstract",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@document",
          "syntaxKind": "block"
        },
        {
          "tagName": "@default",
          "syntaxKind": "block"
        },
        {
          "tagName": "@extends",
          "syntaxKind": "block"
        },
        {
          "tagName": "@augments",
          "syntaxKind": "block"
        },
        {
          "tagName": "@return",
          "syntaxKind": "block"
        },
        {
          "tagName": "@yields",
          "syntaxKind": "block"
        },
        {
          "tagName": "@enum",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@event",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@expand",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@preventExpand",
          "syntaxKind": "block"
        },
        {
          "tagName": "@expandType",
          "syntaxKind": "block"
        },
        {
          "tagName": "@inline",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@preventInline",
          "syntaxKind": "block"
        },
        {
          "tagName": "@inlineType",
          "syntaxKind": "block"
        },
        {
          "tagName": "@primaryExport",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@template",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@linkcode",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@linkplain",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@include",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@includeCode",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@private",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@protected",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@satisfies",
          "syntaxKind": "block"
        },
        {
          "tagName": "@since",
          "syntaxKind": "block"
        },
        {
          "tagName": "@license",
          "syntaxKind": "block"
        },
        {
          "tagName": "@import",
          "syntaxKind": "block"
        },
        {
          "tagName": "@overload",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@namespace",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@interface",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@function",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@showCategories",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hideCategories",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@showGroups",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hideGroups",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hideconstructor",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@jsx",
          "syntaxKind": "block"
        },
        {
          "tagName": "@summary",
          "syntaxKind": "block"
        },
        {
          "tagName": "@useDeclaredType",
          "syntaxKind": "modifier"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@ory/elements-react!",
  "docComment": "",
  "name": "@ory/elements-react",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@ory/elements-react!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!Consent:function(1)",
          "docComment": "/**\n * The Consent component allows you to render the consent flow for Ory OAuth2.\n *\n * It is used to request user consent for accessing their data and resources. The component takes in the OAuth2 consent request object, the session object, the Ory client configuration, a CSRF token, and the URL to submit the consent form to.\n *\n * @param props - The props for the Consent component.\n *\n * @returns the Consent component.\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Flows\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function Consent({ consentChallenge, session, config, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": Passed, children, csrfToken, formActionUrl, }: "
            },
            {
              "kind": "Reference",
              "text": "ConsentFlowProps",
              "canonicalReference": "@ory/elements-react!ConsentFlowProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ consentChallenge, session, config, components: Passed, children, csrfToken, formActionUrl, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Consent"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!ConsentFlowProps:type",
          "docComment": "/**\n * All the props that are passed to the Consent component.\n *\n * @hidden @inline\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ConsentFlowProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    consentChallenge: "
            },
            {
              "kind": "Reference",
              "text": "OAuth2ConsentRequest",
              "canonicalReference": "@ory/client-fetch!OAuth2ConsentRequest:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    session: "
            },
            {
              "kind": "Reference",
              "text": "Session",
              "canonicalReference": "@ory/client-fetch!Session:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OryClientConfiguration",
              "canonicalReference": "@ory/elements-react!~OryClientConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    csrfToken: string;\n    formActionUrl: string;\n    components?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponentOverrides",
              "canonicalReference": "@ory/elements-react!~OryFlowComponentOverrides:type"
            },
            {
              "kind": "Content",
              "text": ";\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "React.ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "ConsentFlowProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultButtonSocial:function(1)",
          "docComment": "/**\n * The default implementation of a social button for Ory SSO. It renders a button with a logo and an optional label.\n *\n * @param props - The props for the DefaultButtonSocial component.\n *\n * @returns \n *\n * @category\n *\n * Default Components\n *\n * @group\n *\n * Components\n *\n * @inlineType\n *\n * OryNodeSsoButtonProps\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultButtonSocial({ attributes, node, onClick, "
            },
            {
              "kind": "Reference",
              "text": "showLabel",
              "canonicalReference": "@ory/elements-react!~DefaultSocialButtonProps#showLabel"
            },
            {
              "kind": "Content",
              "text": ": _showLabel, "
            },
            {
              "kind": "Reference",
              "text": "logos",
              "canonicalReference": "@ory/elements-react!~DefaultSocialButtonProps#logos"
            },
            {
              "kind": "Content",
              "text": ": providedLogos, }: "
            },
            {
              "kind": "Reference",
              "text": "DefaultSocialButtonProps",
              "canonicalReference": "@ory/elements-react!~DefaultSocialButtonProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ attributes, node, onClick, showLabel: _showLabel, logos: providedLogos, }",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "DefaultButtonSocial"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@ory/elements-react!DefaultButtonSocial:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare namespace DefaultButtonSocial "
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "DefaultButtonSocial",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@ory/elements-react!DefaultButtonSocial.WithLogos:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "WithLogos: (logos: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "ElementType",
                  "canonicalReference": "@types/react!React.ElementType:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultSocialButtonProps",
                  "canonicalReference": "@ory/elements-react!~DefaultSocialButtonProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "react_jsx_runtime.JSX.Element",
                  "canonicalReference": "@types/react!JSX.Element:interface"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "WithLogos"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultCard:function(1)",
          "docComment": "/**\n * The DefaultCard component is a styled container that serves as the main card layout for Ory Elements.\n *\n * @param props - The properties for the DefaultCard component.\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultCard({ children }: "
            },
            {
              "kind": "Reference",
              "text": "OryCardProps",
              "canonicalReference": "@ory/elements-react!~OryCardRootProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "DefaultCard"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultCardContent:function(1)",
          "docComment": "/**\n * Simply renders the children passed to it.\n *\n * @param props - pass children to render instead of the default Ory Card components\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultCardContent({ children }: "
            },
            {
              "kind": "Reference",
              "text": "OryCardContentProps",
              "canonicalReference": "@ory/elements-react!~OryCardContentProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react.ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "DefaultCardContent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultCardFooter:function(1)",
          "docComment": "/**\n * DefaultCardFooter renders the default footer for the card component based on the current flow type.\n *\n * @returns The default card footer component that renders the appropriate footer based on the current flow type.\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultCardFooter(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "DefaultCardFooter"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultCardHeader:function(1)",
          "docComment": "/**\n * Renders the default card header component.\n *\n * This component is used to display the header of a card, including the logo, title, description, and current identifier button.\n *\n * @returns the default card header component\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultCardHeader(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "DefaultCardHeader"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultCardLogo:function(1)",
          "docComment": "/**\n * The DefaultCardLogo component renders the logo from the {@link @ory/elements-react!OryProvider} or falls back to the project name.\n *\n * @returns the default logo for the Ory Card component.\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n *\n * @see\n *\n * {@link @ory/elements-react!OryProvider}\n *\n * @see\n *\n * {@link @ory/elements-react!OryElementsConfiguration}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultCardLogo(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "DefaultCardLogo"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultCurrentIdentifierButton:function(1)",
          "docComment": "/**\n * The `DefaultCurrentIdentifierButton` component renders a button that displays the current identifier\n *\n * The button can be used to restart the flow with the current identifier if appropriate.\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultCurrentIdentifierButton(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "DefaultCurrentIdentifierButton"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultFormContainer:function(1)",
          "docComment": "/**\n * The default form container for Ory Elements.\n *\n * @param props - The properties for the DefaultFormContainer component.\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultFormContainer({ children, onSubmit, action, method, }: "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryFormRootProps",
              "canonicalReference": "@ory/elements-react!~OryFormRootProps:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children, onSubmit, action, method, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "DefaultFormContainer"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultMessage:function(1)",
          "docComment": "/**\n * The default message component for Ory Elements.\n *\n * @param props - The properties for the DefaultMessage component.\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n *\n * @see\n *\n * {@link @ory/elements-react!uiTextToFormattedMessage}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultMessage({ message }: "
            },
            {
              "kind": "Reference",
              "text": "OryMessageContentProps",
              "canonicalReference": "@ory/elements-react!~OryMessageContentProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ message }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "DefaultMessage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!DefaultMessageContainer:function(1)",
          "docComment": "/**\n * The default message container for Ory Elements.\n *\n * @param props - The properties for the DefaultMessageContainer component.\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Default Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function DefaultMessageContainer({ children }: "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "DefaultMessageContainer"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!Error_2:function(1)",
          "docComment": "/**\n * The Error component is used to display an error message to the user.\n *\n * @param props - The props for the Error component.\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Flows\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function Error({ error, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": Components, config, session, }: "
            },
            {
              "kind": "Reference",
              "text": "ErrorFlowContextProps",
              "canonicalReference": "@ory/elements-react!ErrorFlowContextProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ error, components: Components, config, session, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Error_2"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!ErrorFlowContextProps:type",
          "docComment": "/**\n * Props for the Error component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ErrorFlowContextProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    error: "
            },
            {
              "kind": "Reference",
              "text": "OryError",
              "canonicalReference": "@ory/elements-react!OryError:type"
            },
            {
              "kind": "Content",
              "text": ";\n    components?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponentOverrides",
              "canonicalReference": "@ory/elements-react!~OryFlowComponentOverrides:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OryClientConfiguration",
              "canonicalReference": "@ory/elements-react!~OryClientConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    session?: "
            },
            {
              "kind": "Reference",
              "text": "Session",
              "canonicalReference": "@ory/client-fetch!Session:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "ErrorFlowContextProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!getOryComponents:function(1)",
          "docComment": "/**\n * Merges the default Ory components with any provided overrides.\n *\n * The output of this function is a complete set of components that can be used in Ory flows.\n *\n * @param overrides - Optional overrides for the default components.\n *\n * @returns \n *\n * @category\n *\n * Utilities\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function getOryComponents(overrides?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponentOverrides",
              "canonicalReference": "@ory/elements-react!~OryFlowComponentOverrides:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!~OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "overrides",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "getOryComponents"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!Login:function(1)",
          "docComment": "/**\n * The `Login` component is used to render the login flow in Ory Elements.\n *\n * It provides the necessary context and components for the login flow, allowing you to customize the appearance and behavior of the login form.\n *\n * @param props - The props for the Login component.\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Flows\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function Login({ flow, config, children, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": flowOverrideComponents, }: "
            },
            {
              "kind": "Reference",
              "text": "LoginFlowContextProps",
              "canonicalReference": "@ory/elements-react!LoginFlowContextProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ flow, config, children, components: flowOverrideComponents, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Login"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!LoginFlowContextProps:type",
          "docComment": "/**\n * Props for the Login component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type LoginFlowContextProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "LoginFlow",
              "canonicalReference": "@ory/client-fetch!LoginFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    components?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponentOverrides",
              "canonicalReference": "@ory/elements-react!~OryFlowComponentOverrides:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OryClientConfiguration",
              "canonicalReference": "@ory/elements-react!~OryClientConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "React.ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "LoginFlowContextProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OAuth2Error:type",
          "docComment": "/**\n * An OAuth2 error response.\n *\n * @hidden @inline\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OAuth2Error = "
            },
            {
              "kind": "Content",
              "text": "{\n    error: string;\n    error_description: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "OAuth2Error",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryError:type",
          "docComment": "/**\n * A union type of all possible errors that can be returned by the Ory SDK.\n *\n * @hidden @inline\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryError = "
            },
            {
              "kind": "Reference",
              "text": "FlowError",
              "canonicalReference": "@ory/client-fetch!FlowError:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "OAuth2Error",
              "canonicalReference": "@ory/elements-react!OAuth2Error:type"
            },
            {
              "kind": "Content",
              "text": " | {\n    error: "
            },
            {
              "kind": "Reference",
              "text": "GenericError",
              "canonicalReference": "@ory/client-fetch!GenericError:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "OryError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!Recovery:function(1)",
          "docComment": "/**\n * The `Recovery` component is used to render the recovery flow in Ory Elements.\n *\n * @param props - The props for the Recovery component.\n *\n * @returns the recovery flow component.\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Flows\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function Recovery({ flow, config, children, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": flowOverrideComponents, }: "
            },
            {
              "kind": "Reference",
              "text": "RecoveryFlowContextProps",
              "canonicalReference": "@ory/elements-react!RecoveryFlowContextProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ flow, config, children, components: flowOverrideComponents, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Recovery"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!RecoveryFlowContextProps:type",
          "docComment": "/**\n * Props for the Recovery component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type RecoveryFlowContextProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "RecoveryFlow",
              "canonicalReference": "@ory/client-fetch!RecoveryFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    components?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponentOverrides",
              "canonicalReference": "@ory/elements-react!~OryFlowComponentOverrides:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OryClientConfiguration",
              "canonicalReference": "@ory/elements-react!~OryClientConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "React.ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "RecoveryFlowContextProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!Registration:function(1)",
          "docComment": "/**\n * The `Registration` component is used to render the registration flow in Ory Elements.\n *\n * @param props - The props for the Registration component.\n *\n * @returns \n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Flows\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function Registration({ flow, children, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": flowOverrideComponents, config, }: "
            },
            {
              "kind": "Reference",
              "text": "RegistrationFlowContextProps",
              "canonicalReference": "@ory/elements-react!~RegistrationFlowContextProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ flow, children, components: flowOverrideComponents, config, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Registration"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!Settings:function(1)",
          "docComment": "/**\n * The `Settings` component is used to render the settings flow in Ory Elements.\n *\n * It provides the necessary context and components for the settings flow, allowing you to customize the appearance and behavior of the settings form.\n *\n * @param props - The props for the Settings component.\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Flows\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function Settings({ flow, config, children, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": flowOverrideComponents, }: "
            },
            {
              "kind": "Reference",
              "text": "SettingsFlowContextProps",
              "canonicalReference": "@ory/elements-react!SettingsFlowContextProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ flow, config, children, components: flowOverrideComponents, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Settings"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!SettingsFlowContextProps:type",
          "docComment": "/**\n * Props for the Settings component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type SettingsFlowContextProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "SettingsFlow",
              "canonicalReference": "@ory/client-fetch!SettingsFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    components?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponentOverrides",
              "canonicalReference": "@ory/elements-react!~OryFlowComponentOverrides:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OryClientConfiguration",
              "canonicalReference": "@ory/elements-react!~OryClientConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "React.ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "SettingsFlowContextProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!Verification:function(1)",
          "docComment": "/**\n * The `Verification` component is used to render the verification flow in Ory Elements.\n *\n * It provides the necessary context and components for the verification flow, allowing you to customize the appearance and behavior of the verification form.\n *\n * @param props - The props for the Verification component.\n *\n * @group\n *\n * Components\n *\n * @category\n *\n * Flows\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function Verification({ flow, config, children, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": flowOverrideComponents, }: "
            },
            {
              "kind": "Reference",
              "text": "VerificationFlowContextProps",
              "canonicalReference": "@ory/elements-react!VerificationFlowContextProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ flow, config, children, components: flowOverrideComponents, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Verification"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!VerificationFlowContextProps:type",
          "docComment": "/**\n * Props for the Verification component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type VerificationFlowContextProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "VerificationFlow",
              "canonicalReference": "@ory/client-fetch!VerificationFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    components?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponentOverrides",
              "canonicalReference": "@ory/elements-react!~OryFlowComponentOverrides:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OryClientConfiguration",
              "canonicalReference": "@ory/elements-react!~OryClientConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "React.ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/theme/default/index.d.ts",
          "releaseTag": "Public",
          "name": "VerificationFlowContextProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        }
      ]
    }
  ]
}
