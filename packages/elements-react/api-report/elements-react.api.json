{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.8",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@author",
          "syntaxKind": "block"
        },
        {
          "tagName": "@module",
          "syntaxKind": "block"
        },
        {
          "tagName": "@mergeModuleWith",
          "syntaxKind": "block"
        },
        {
          "tagName": "@type",
          "syntaxKind": "block"
        },
        {
          "tagName": "@typedef",
          "syntaxKind": "block"
        },
        {
          "tagName": "@callback",
          "syntaxKind": "block"
        },
        {
          "tagName": "@prop",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@property",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@group",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@groupDescription",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@disableGroups",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@category",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@categoryDescription",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@hidden",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@ignore",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@class",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@abstract",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@document",
          "syntaxKind": "block"
        },
        {
          "tagName": "@default",
          "syntaxKind": "block"
        },
        {
          "tagName": "@extends",
          "syntaxKind": "block"
        },
        {
          "tagName": "@augments",
          "syntaxKind": "block"
        },
        {
          "tagName": "@return",
          "syntaxKind": "block"
        },
        {
          "tagName": "@yields",
          "syntaxKind": "block"
        },
        {
          "tagName": "@enum",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@event",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@expand",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@preventExpand",
          "syntaxKind": "block"
        },
        {
          "tagName": "@expandType",
          "syntaxKind": "block"
        },
        {
          "tagName": "@inline",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@preventInline",
          "syntaxKind": "block"
        },
        {
          "tagName": "@inlineType",
          "syntaxKind": "block"
        },
        {
          "tagName": "@primaryExport",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@template",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@linkcode",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@linkplain",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@include",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@includeCode",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@private",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@protected",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@satisfies",
          "syntaxKind": "block"
        },
        {
          "tagName": "@since",
          "syntaxKind": "block"
        },
        {
          "tagName": "@license",
          "syntaxKind": "block"
        },
        {
          "tagName": "@import",
          "syntaxKind": "block"
        },
        {
          "tagName": "@overload",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@namespace",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@interface",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@function",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@showCategories",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hideCategories",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@showGroups",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hideGroups",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hideconstructor",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@jsx",
          "syntaxKind": "block"
        },
        {
          "tagName": "@summary",
          "syntaxKind": "block"
        },
        {
          "tagName": "@useDeclaredType",
          "syntaxKind": "modifier"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@ory/elements-react!",
  "docComment": "",
  "name": "@ory/elements-react",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@ory/elements-react!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!ConsentFlow:type",
          "docComment": "/**\n * A flow container for the OAuth2 consent flow\n *\n * Note: This is a polyfill for the OAuth2 consent flow, which is not yet implemented in the Ory SDK. It tries to mirror the structure of the other flow containers as closely as possible.\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ConsentFlow = "
            },
            {
              "kind": "Content",
              "text": "{\n    created_at: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    expires_at: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    id: \"UNSET\";\n    issued_at: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    state: \"show_form\" | \"rejected\" | \"accepted\";\n    active: \"oauth2_consent\";\n    ui: "
            },
            {
              "kind": "Reference",
              "text": "UiContainer",
              "canonicalReference": "@ory/client-fetch!UiContainer:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    consent_request: "
            },
            {
              "kind": "Reference",
              "text": "OAuth2ConsentRequest",
              "canonicalReference": "@ory/client-fetch!OAuth2ConsentRequest:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    session: "
            },
            {
              "kind": "Reference",
              "text": "Session",
              "canonicalReference": "@ory/client-fetch!Session:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    return_to?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ConsentFlow",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!ConsentFlowContainer:type",
          "docComment": "/**\n * A flow container for the OAuth2 {@link ConsentFlow}\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ConsentFlowContainer = "
            },
            {
              "kind": "Content",
              "text": "{\n    flowType: "
            },
            {
              "kind": "Reference",
              "text": "FlowType.OAuth2Consent",
              "canonicalReference": "@ory/client-fetch!FlowType.OAuth2Consent:member"
            },
            {
              "kind": "Content",
              "text": ";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "ConsentFlow",
              "canonicalReference": "@ory/elements-react!ConsentFlow:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ConsentFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!ErrorFlowContainer:type",
          "docComment": "/**\n * A flow container for the {@link FlowError}\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ErrorFlowContainer = "
            },
            {
              "kind": "Content",
              "text": "{\n    flowType: "
            },
            {
              "kind": "Reference",
              "text": "FlowType.Error",
              "canonicalReference": "@ory/client-fetch!FlowType.Error:member"
            },
            {
              "kind": "Content",
              "text": ";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "FlowError",
              "canonicalReference": "@ory/client-fetch!FlowError:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ErrorFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FlowContainerSetter:type",
          "docComment": "/**\n * Function to set the flow container.\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FlowContainerSetter = "
            },
            {
              "kind": "Reference",
              "text": "Dispatch",
              "canonicalReference": "@types/react!React.Dispatch:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryFlowContainer",
              "canonicalReference": "@ory/elements-react!OryFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FlowContainerSetter",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FlowContextValue:type",
          "docComment": "/**\n * The return value of the OryFlowContext.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FlowContextValue = "
            },
            {
              "kind": "Reference",
              "text": "OryFlowContainer",
              "canonicalReference": "@ory/elements-react!OryFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    setFlowContainer: "
            },
            {
              "kind": "Reference",
              "text": "FlowContainerSetter",
              "canonicalReference": "@ory/elements-react!FlowContainerSetter:type"
            },
            {
              "kind": "Content",
              "text": ";\n    formState: "
            },
            {
              "kind": "Reference",
              "text": "FormState",
              "canonicalReference": "@ory/elements-react!FormState:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dispatchFormState: "
            },
            {
              "kind": "Reference",
              "text": "Dispatch",
              "canonicalReference": "@types/react!React.Dispatch:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FormStateAction",
              "canonicalReference": "@ory/elements-react!FormStateAction:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FlowContextValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FormState:type",
          "docComment": "/**\n * Represents the state of the form based on the flow type and active method. This type is used to determine which part of the form should be displayed.\n *\n * It can be one of the following: - `select_method`: The user is selecting an authentication method. - `provide_identifier`: The user is providing an identifier (e.g., email or username). - `method_active`: An authentication method is active, and the user is interacting with it. - `success_screen`: The flow has successfully completed (only used in the verification flow). - `settings`: The user is in the settings flow.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FormState = "
            },
            {
              "kind": "Reference",
              "text": "FormStateSelectMethod",
              "canonicalReference": "@ory/elements-react!FormStateSelectMethod:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "FormStateProvideIdentifier",
              "canonicalReference": "@ory/elements-react!FormStateProvideIdentifier:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "FormStateMethodActive",
              "canonicalReference": "@ory/elements-react!FormStateMethodActive:type"
            },
            {
              "kind": "Content",
              "text": " | {\n    current: \"success_screen\";\n} | {\n    current: \"settings\";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FormState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FormStateAction:type",
          "docComment": "/**\n * Represents the actions that can be dispatched to update the form state. These actions are used to change the current state of the form based on user interactions or flow updates.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FormStateAction = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: \"action_flow_update\";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowContainer",
              "canonicalReference": "@ory/elements-react!OryFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    type: \"action_select_method\";\n    method: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeGroupEnum",
              "canonicalReference": "@ory/client-fetch!UiNodeGroupEnum:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    type: \"action_clear_active_method\";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FormStateAction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FormStateMethodActive:type",
          "docComment": "/**\n * Represents the state of the form when an authentication method is active. This type is used when the user is interacting with a specific authentication method (e.g., entering a password or entering a code received via email).\n *\n * The `method` field indicates which authentication method is currently active.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FormStateMethodActive = "
            },
            {
              "kind": "Content",
              "text": "{\n    current: \"method_active\";\n    method: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeGroupEnum",
              "canonicalReference": "@ory/client-fetch!UiNodeGroupEnum:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FormStateMethodActive",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FormStateProvideIdentifier:type",
          "docComment": "/**\n * Represents the state of the form when providing an identifier. This type is used when the user is required to provide an identifier (e.g., email or username) before proceeding with the authentication flow.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FormStateProvideIdentifier = "
            },
            {
              "kind": "Content",
              "text": "{\n    current: \"provide_identifier\";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FormStateProvideIdentifier",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FormStateSelectMethod:type",
          "docComment": "/**\n * Represents the state of the form when selecting an authentication method. This type is used when the user is in the process of selecting an authentication method (e.g., password, passkey, etc.) during the login or registration flow.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FormStateSelectMethod = "
            },
            {
              "kind": "Content",
              "text": "{\n    current: \"select_method\";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FormStateSelectMethod",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!FormValues:type",
          "docComment": "/**\n * A generic type for the form values.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FormValues = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | boolean | number | undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FormValues",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!IntlConfig:type",
          "docComment": "/**\n * The configuration for internationalization (i18n) in Ory Elements.\n *\n * This configuration is used to set the locale and can be used to provide custom translations. The locale is used to determine the language of the UI.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type IntlConfig = "
            },
            {
              "kind": "Content",
              "text": "{\n    locale: "
            },
            {
              "kind": "Reference",
              "text": "Locale",
              "canonicalReference": "@ory/elements-react!~Locale:type"
            },
            {
              "kind": "Content",
              "text": ";\n    customTranslations?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LocaleMap",
              "canonicalReference": "@ory/elements-react!~LocaleMap:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "IntlConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!LoginFlowContainer:type",
          "docComment": "/**\n * A flow container for the {@link LoginFlow}\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type LoginFlowContainer = "
            },
            {
              "kind": "Content",
              "text": "{\n    flowType: "
            },
            {
              "kind": "Reference",
              "text": "FlowType.Login",
              "canonicalReference": "@ory/client-fetch!FlowType.Login:member"
            },
            {
              "kind": "Content",
              "text": ";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "LoginFlow",
              "canonicalReference": "@ory/client-fetch!LoginFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "LoginFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!messageTestId:function(1)",
          "docComment": "/**\n * Helper function to generate a test id for a UiText message.\n *\n * @param message - the UiText message to generate a test id for\n *\n * @returns a unique, stable test id for the message\n *\n * @group\n *\n * Utilities\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function messageTestId(message: "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number | string;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    \"data-testid\": string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "messageTestId"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OnSubmitHandlerProps:type",
          "docComment": "/**\n * Props for the submit handler\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OnSubmitHandlerProps<T extends "
            },
            {
              "kind": "Reference",
              "text": "UpdateLoginFlowBody",
              "canonicalReference": "@ory/client-fetch!UpdateLoginFlowBody:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UpdateRegistrationFlowBody",
              "canonicalReference": "@ory/client-fetch!UpdateRegistrationFlowBody:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UpdateVerificationFlowBody",
              "canonicalReference": "@ory/client-fetch!UpdateVerificationFlowBody:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UpdateRecoveryFlowBody",
              "canonicalReference": "@ory/client-fetch!UpdateRecoveryFlowBody:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UpdateSettingsFlowBody",
              "canonicalReference": "@ory/client-fetch!UpdateSettingsFlowBody:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    setFlowContainer: (flowContainer: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowContainer",
              "canonicalReference": "@ory/elements-react!OryFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    body: T;\n    onRedirect: "
            },
            {
              "kind": "Reference",
              "text": "OnRedirectHandler",
              "canonicalReference": "@ory/client-fetch!OnRedirectHandler:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OnSubmitHandlerProps",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 11,
            "endIndex": 16
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryCard:function(1)",
          "docComment": "/**\n * The root component of the Ory Card.\n *\n * This can be used to build fully custom implementations of the Ory Flows.\n *\n * However, you most likely want to override the individual components instead.\n *\n * @param props - pass children to render instead of the default Ory Card components\n *\n * @returns \n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryCard({ children }: "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "OryCard"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryCardAuthMethodListItemProps:type",
          "docComment": "/**\n * Props for the AuthMethodListItem component. This component is used to render a single auth method in the AuthMethodList component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryCardAuthMethodListItemProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    onClick: () => void;\n    group: string;\n    title?: {\n        id: string;\n        values?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string>;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardAuthMethodListItemProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryCardContent:function(1)",
          "docComment": "/**\n * A component that renders the content of the Ory Card. This is the main content of the card, such as the flow's form, with it's input fields and messages.\n *\n * You can use this component to build fully custom implementations of the Ory Flows.\n *\n * However, you most likely want to override the individual components instead.\n *\n * @param props - pass children to render instead of the default Ory Card components\n *\n * @returns \n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryCardContent({ children }: "
            },
            {
              "kind": "Reference",
              "text": "OryCardContentProps",
              "canonicalReference": "@ory/elements-react!OryCardContentProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "OryCardContent"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryCardContentProps:type",
          "docComment": "/**\n * Props for the OryCardContent component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryCardContentProps = "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardContentProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryCardDividerProps:type",
          "docComment": "/**\n * Props type for the Form Group Divider component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryCardDividerProps = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, never>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardDividerProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryCardFooter:function(1)",
          "docComment": "/**\n * @returns The footer of a card component.\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryCardFooter(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OryCardFooter"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryCardFooterProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryCardFooterProps = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, never>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardFooterProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryCardHeader:function(1)",
          "docComment": "/**\n * Returns the header of the Ory Card.\n *\n * @returns The header of the Ory Card.\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryCardHeader(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OryCardHeader"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryCardHeaderProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryCardHeaderProps = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, never>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardHeaderProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryCardLogoProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryCardLogoProps = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, never>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardLogoProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryCardProps:type",
          "docComment": "/**\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryCardRootProps = "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@ory/elements-react!OryCardSettingsSectionProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface OryCardSettingsSectionProps extends "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardSettingsSectionProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryCardSettingsSectionProps#action:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryCardSettingsSectionProps#method:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "method: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryCardSettingsSectionProps#onSubmit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSubmit: "
                },
                {
                  "kind": "Reference",
                  "text": "FormEventHandler",
                  "canonicalReference": "@types/react!React.FormEventHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "HTMLFormElement",
                  "canonicalReference": "!HTMLFormElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSubmit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryCardValidationMessages:function(1)",
          "docComment": "/**\n * Renders the {@link OryFlowComponents.Message.Content} component for each message in the current flow.\n *\n * See also {@link useOryFlow}\n *\n * @returns \n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryCardValidationMessages({ hiddenMessageIds, }: "
            },
            {
              "kind": "Reference",
              "text": "OryCardValidationMessagesProps",
              "canonicalReference": "@ory/elements-react!OryCardValidationMessagesProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ hiddenMessageIds, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "OryCardValidationMessages"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@ory/elements-react!OryCardValidationMessagesProps:interface",
          "docComment": "/**\n * Props for the {@link OryCardValidationMessages} component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface OryCardValidationMessagesProps "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryCardValidationMessagesProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryCardValidationMessagesProps#hiddenMessageIds:member",
              "docComment": "/**\n * An array of message IDs that should be hidden. This is useful for hiding specific messages that are not relevant to the user or are rendered elsewhere. If not provided, the default list of message IDs to hide will be used.\n *\n * @default\n *\n * [1040009, 1060003, 1080003, 1010004, 1010014, 1040005, 1010016, 1010003]\n *\n * @see\n *\n * https://www.ory.sh/docs/kratos/concepts/ui-messages\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hiddenMessageIds?: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hiddenMessageIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@ory/elements-react!OryClientConfiguration:interface",
          "docComment": "/**\n * The configuration for Ory Elements.\n *\n * This configuration is used to customize the behavior and appearance of Ory Elements.\n *\n * By setting UI urls, you can override the default URLs for the login, registration, recovery, and verification flows.\n *\n * You can also set the name of the application, the logo URL, and the SDK configuration. By default, the name and logo are displayed in the card's header.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface OryClientConfiguration "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryClientConfiguration",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryClientConfiguration#intl:member",
              "docComment": "/**\n * The internationalization configuration. This configuration is used to set the locale and any additional options used for the i18n library. The locale is used to determine the language of the UI. The default locale is \"en\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intl?: "
                },
                {
                  "kind": "Reference",
                  "text": "IntlConfig",
                  "canonicalReference": "@ory/elements-react!IntlConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "intl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryClientConfiguration#project:member",
              "docComment": "/**\n * The configuration for the project.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "project: "
                },
                {
                  "kind": "Reference",
                  "text": "AccountExperienceConfiguration",
                  "canonicalReference": "@ory/client-fetch!AccountExperienceConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "project",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryClientConfiguration#sdk:member",
              "docComment": "/**\n * The SDK configuration. This configuration is used to set the URL of the Ory SDK and any additional options used for the SDK client.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sdk?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        url?: string;\n        options?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfigurationParameters",
                  "canonicalReference": "@ory/client-fetch!ConfigurationParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sdk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryConfigurationProvider:function(1)",
          "docComment": "/**\n * The `OryConfigurationProvider` component provides the Ory Elements configuration to its children.\n *\n * @param props - The properties for the OryConfigurationProvider component.\n *\n * @returns \n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryConfigurationProvider({ children, "
            },
            {
              "kind": "Reference",
              "text": "sdk",
              "canonicalReference": "@ory/elements-react!~OryConfigurationProviderProps#sdk"
            },
            {
              "kind": "Content",
              "text": ": initialConfig, project, }: "
            },
            {
              "kind": "Reference",
              "text": "OryConfigurationProviderProps",
              "canonicalReference": "@ory/elements-react!~OryConfigurationProviderProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children, sdk: initialConfig, project, }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "OryConfigurationProvider"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryConsentCard:function(1)",
          "docComment": "/**\n * The `OryConsentCard` component renders a card for displaying the OAuth2 consent flow.\n *\n * @returns The consent card component.\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryConsentCard(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OryConsentCard"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryElementsConfiguration:type",
          "docComment": "/**\n * The Ory Elements configuration object.\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryElementsConfiguration = "
            },
            {
              "kind": "Content",
              "text": "{\n    sdk: "
            },
            {
              "kind": "Reference",
              "text": "OrySDK",
              "canonicalReference": "@ory/elements-react!~OrySDK:type"
            },
            {
              "kind": "Content",
              "text": ";\n    project: "
            },
            {
              "kind": "Reference",
              "text": "AccountExperienceConfiguration",
              "canonicalReference": "@ory/client-fetch!AccountExperienceConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryElementsConfiguration",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFlowComponentOverrides:type",
          "docComment": "/**\n * Makes the components in OryFlowComponents optional, so that you can override only the components you want to change.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFlowComponentOverrides = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": "]?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": "[P] extends object ? {\n        [K in keyof "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": "[P]]?: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": "[P][K];\n    } : "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": "[P];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFlowComponentOverrides",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFlowComponents:type",
          "docComment": "/**\n * A record of all the components that are used in the OryForm component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFlowComponents = "
            },
            {
              "kind": "Content",
              "text": "{\n    Node: {\n        Button: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeButtonProps",
              "canonicalReference": "@ory/elements-react!OryNodeButtonProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        SsoButton: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeSsoButtonProps",
              "canonicalReference": "@ory/elements-react!OryNodeSsoButtonProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Anchor: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeAnchorProps",
              "canonicalReference": "@ory/elements-react!OryNodeAnchorProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Input: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeInputProps",
              "canonicalReference": "@ory/elements-react!OryNodeInputProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        CodeInput: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeInputProps",
              "canonicalReference": "@ory/elements-react!OryNodeInputProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Image: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeImageProps",
              "canonicalReference": "@ory/elements-react!OryNodeImageProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Label: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeLabelProps",
              "canonicalReference": "@ory/elements-react!OryNodeLabelProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Checkbox: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeInputProps",
              "canonicalReference": "@ory/elements-react!OryNodeInputProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Text: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeTextProps",
              "canonicalReference": "@ory/elements-react!OryNodeTextProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Captcha: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeCaptchaProps",
              "canonicalReference": "@ory/elements-react!OryNodeCaptchaProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        ConsentScopeCheckbox: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryNodeConsentScopeCheckboxProps",
              "canonicalReference": "@ory/elements-react!OryNodeConsentScopeCheckboxProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    };\n    Card: {\n        Root: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardRootProps",
              "canonicalReference": "@ory/elements-react!OryCardProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Footer: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardFooterProps",
              "canonicalReference": "@ory/elements-react!OryCardFooterProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Header: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardRootProps",
              "canonicalReference": "@ory/elements-react!OryCardProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Content: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardContentProps",
              "canonicalReference": "@ory/elements-react!OryCardContentProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Logo: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardLogoProps",
              "canonicalReference": "@ory/elements-react!OryCardLogoProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Divider: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardDividerProps",
              "canonicalReference": "@ory/elements-react!OryCardDividerProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        AuthMethodListContainer: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        AuthMethodListItem: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardAuthMethodListItemProps",
              "canonicalReference": "@ory/elements-react!OryCardAuthMethodListItemProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        SettingsSection: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryCardSettingsSectionProps",
              "canonicalReference": "@ory/elements-react!OryCardSettingsSectionProps:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n        SettingsSectionContent: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryFormSectionContentProps",
              "canonicalReference": "@ory/elements-react!OryFormSectionContentProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        SettingsSectionFooter: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryFormSectionFooterProps",
              "canonicalReference": "@ory/elements-react!OryFormSectionFooterProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    };\n    Form: {\n        Root: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryFormRootProps",
              "canonicalReference": "@ory/elements-react!OryFormRootProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        SsoRoot: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryFormSsoRootProps",
              "canonicalReference": "@ory/elements-react!OryFormSsoRootProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Group: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryFormGroupProps",
              "canonicalReference": "@ory/elements-react!OryFormGroupProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        SsoSettings: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OrySettingsSsoProps",
              "canonicalReference": "@ory/elements-react!OrySettingsSsoProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        WebauthnSettings: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OrySettingsWebauthnProps",
              "canonicalReference": "@ory/elements-react!OrySettingsWebauthnProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        PasskeySettings: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OrySettingsPasskeyProps",
              "canonicalReference": "@ory/elements-react!OrySettingsPasskeyProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        TotpSettings: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OrySettingsTotpProps",
              "canonicalReference": "@ory/elements-react!OrySettingsTotpProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        RecoveryCodesSettings: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OrySettingsRecoveryCodesProps",
              "canonicalReference": "@ory/elements-react!OrySettingsRecoveryCodesProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    };\n    Message: {\n        Root: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryMessageRootProps",
              "canonicalReference": "@ory/elements-react!OryMessageRootProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Content: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryMessageContentProps",
              "canonicalReference": "@ory/elements-react!OryMessageContentProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        Toast: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryToastProps",
              "canonicalReference": "@ory/elements-react!OryToastProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    };\n    Page: {\n        Header: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OryPageHeaderProps",
              "canonicalReference": "@ory/elements-react!OryPageHeaderProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFlowComponents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 138
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFlowContainer:type",
          "docComment": "/**\n * A union type of all flow containers\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFlowContainer = "
            },
            {
              "kind": "Reference",
              "text": "LoginFlowContainer",
              "canonicalReference": "@ory/elements-react!LoginFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RegistrationFlowContainer",
              "canonicalReference": "@ory/elements-react!RegistrationFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RecoveryFlowContainer",
              "canonicalReference": "@ory/elements-react!RecoveryFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "VerificationFlowContainer",
              "canonicalReference": "@ory/elements-react!VerificationFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SettingsFlowContainer",
              "canonicalReference": "@ory/elements-react!SettingsFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ConsentFlowContainer",
              "canonicalReference": "@ory/elements-react!ConsentFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryForm:function(1)",
          "docComment": "/**\n * The OryForm component is the main form container for Ory flows.\n *\n * It renders the form with the correct action and method, and handles the submission of the form.\n *\n * @param props - The props for the OryForm component.\n *\n * @returns \n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryForm({ children, onAfterSubmit }: "
            },
            {
              "kind": "Reference",
              "text": "OryFormProps",
              "canonicalReference": "@ory/elements-react!OryFormProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children, onAfterSubmit }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "OryForm"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryFormGroupDivider:function(1)",
          "docComment": "/**\n * Renders the {@link OryFlowComponents.Card.Divider} between the groups of nodes in the Ory Form.\n *\n * You can use this component to build fully custom implementations of the Ory Flows.\n *\n * However, you most likely want to override the individual components instead.\n *\n * @returns \n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryFormGroupDivider(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OryFormGroupDivider"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFormGroupProps:type",
          "docComment": "/**\n * Props for the Form.Group component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFormGroupProps = "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFormGroupProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@ory/elements-react!OryFormProps:interface",
          "docComment": "/**\n * The props for the OryForm component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface OryFormProps extends "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFormProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryFormProps#onAfterSubmit:member",
              "docComment": "/**\n * A callback function that is called after the form is submitted.\n *\n * It is always called after the form is submitted, unless the form submission is prevented by client side validation or the API response dictated that the client should be redirected\n *\n * @param method - The method that was submitted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAfterSubmit?: "
                },
                {
                  "kind": "Content",
                  "text": "(method: string | number | boolean | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onAfterSubmit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFormRootProps:type",
          "docComment": "/**\n * Props for the Form.Root component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFormRootProps = "
            },
            {
              "kind": "Reference",
              "text": "ComponentPropsWithoutRef",
              "canonicalReference": "@types/react!React.ComponentPropsWithoutRef:type"
            },
            {
              "kind": "Content",
              "text": "<\"form\"> & {\n    onSubmit: "
            },
            {
              "kind": "Reference",
              "text": "FormEventHandler",
              "canonicalReference": "@types/react!React.FormEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLFormElement",
              "canonicalReference": "!HTMLFormElement:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFormRootProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFormSectionContentProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFormSectionContentProps = "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    title?: string;\n    description?: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFormSectionContentProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFormSectionFooterProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFormSectionFooterProps = "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    text?: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFormSectionFooterProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@ory/elements-react!OryFormSectionProps:interface",
          "docComment": "/**\n * Props for the OrySettingsFormSection component.\n *\n * @inline @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface OryFormSectionProps extends "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OrySettingsFormProps",
              "canonicalReference": "@ory/elements-react!OrySettingsFormProps:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFormSectionProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@ory/elements-react!OryFormSectionProps#nodes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodes?: "
                },
                {
                  "kind": "Reference",
                  "text": "UiNode",
                  "canonicalReference": "@ory/client-fetch!UiNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nodes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryFormSsoButtons:function(1)",
          "docComment": "/**\n * Renders the flow's OIDC buttons.\n *\n * @returns a React component that renders the OIDC buttons.\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryFormSsoButtons(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OryFormSsoButtons"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryFormSsoForm:function(1)",
          "docComment": "/**\n * The `OryFormSsoForm` component renders the Ory Form for SSO methods (OIDC and SAML).\n *\n * It needs to be its own form, as the OIDC buttons are form submits but are not related to the main form.\n *\n * @returns a React component that renders the Ory Form for SSO methods.\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryFormSsoForm(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OryFormSsoForm"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryFormSsoRootProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryFormSsoRootProps = "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    nodes: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": "[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryFormSsoRootProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@ory/elements-react!OryLocales:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "OryLocales: "
            },
            {
              "kind": "Reference",
              "text": "LocaleMap",
              "canonicalReference": "@ory/elements-react!~LocaleMap:type"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "OryLocales",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryMessageContentProps:type",
          "docComment": "/**\n * Props for the OryMessageContent component.\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryMessageContentProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    message: "
            },
            {
              "kind": "Reference",
              "text": "UiText",
              "canonicalReference": "@ory/client-fetch!UiText:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryMessageContentProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryMessageRootProps:type",
          "docComment": "/**\n * @interface @expand\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryMessageRootProps = "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryMessageRootProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeAnchorProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeAnchorProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeAnchorAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeAnchorAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComponentPropsWithoutRef",
              "canonicalReference": "@types/react!React.ComponentPropsWithoutRef:type"
            },
            {
              "kind": "Content",
              "text": "<\"a\">, \"children\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeAnchorProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeButtonProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeButtonProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeInputAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeInputAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComponentPropsWithoutRef",
              "canonicalReference": "@types/react!React.ComponentPropsWithoutRef:type"
            },
            {
              "kind": "Content",
              "text": "<\"button\">, \"children\"> & "
            },
            {
              "kind": "Reference",
              "text": "ButtonVariants",
              "canonicalReference": "@ory/elements-react!~ButtonVariants:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeButtonProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeCaptchaProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeCaptchaProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeCaptchaProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeConsentScopeCheckboxProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeConsentScopeCheckboxProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeInputAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeInputAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    onCheckedChange: (checked: boolean) => void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeConsentScopeCheckboxProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeImageProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeImageProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeImageAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeImageAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeImageProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeInputProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeInputProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeInputAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeInputAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    onClick?: "
            },
            {
              "kind": "Reference",
              "text": "MouseEventHandler",
              "canonicalReference": "@types/react!React.MouseEventHandler:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeInputProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeLabelProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeLabelProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeInputAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeInputAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "ComponentPropsWithoutRef",
              "canonicalReference": "@types/react!React.ComponentPropsWithoutRef:type"
            },
            {
              "kind": "Content",
              "text": "<\"label\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeLabelProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeSsoButtonProps:type",
          "docComment": "/**\n * Props for the OryNodeSsoButton component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeSsoButtonProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeInputAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeInputAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    onClick?: () => void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeSsoButtonProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryNodeTextProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryNodeTextProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    attributes: "
            },
            {
              "kind": "Reference",
              "text": "UiNodeTextAttributes",
              "canonicalReference": "@ory/client-fetch!UiNodeTextAttributes:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    node: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryNodeTextProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryPageHeader:function(1)",
          "docComment": "/**\n * The OryPageHeader component renders the header of the page.\n *\n * Customize the header by providing a custom {@link OryFlowComponents.Page.Header} component in the `components` prop of the {@link OryProvider}.\n *\n * @returns a React component that renders the page header.\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "OryPageHeader: () => "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OryPageHeader"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryPageHeaderProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryPageHeaderProps = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<never, never>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryPageHeaderProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OryProvider:function(1)",
          "docComment": "/**\n * OryProvider is a React component that provides the necessary context for rendering Ory flows.\n *\n * It wraps the application in several context providers, including {@link OryConfigurationProvider}.\n *\n * You can use this component to set up the Ory SDK, provide custom translations, and specify the components to use for rendering Ory flows.\n *\n * @param props - The properties for the OryProvider component.\n *\n * @returns \n *\n * @example\n * ```tsx\n * import { OryProvider, LoginFlow, OryFlowComponents, OryClientConfiguration } from \"@ory/elements-react\";\n *\n *\n * export type Props = {\n *   flow: LoginFlow\n *   components: OryFlowComponents\n *   config: OryClientConfiguration\n * }\n *\n * function App({\n *   flow,\n *   config,\n *   children,\n *   components,\n * }: PropsWithChildren<Props>) {\n *   return (\n *     <OryProvider\n *       config={config}\n *       flow={flow}\n *       flowType={FlowType.Login}\n *       components={components}\n *     >\n *       {children}\n *     </OryProvider>\n *   )\n * }\n *\n * ```\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OryProvider({ children, "
            },
            {
              "kind": "Reference",
              "text": "components",
              "canonicalReference": "@ory/elements-react!~__type#components"
            },
            {
              "kind": "Content",
              "text": ": Components, config, ...oryFlowProps }: "
            },
            {
              "kind": "Reference",
              "text": "OryProviderProps",
              "canonicalReference": "@ory/elements-react!OryProviderProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children, components: Components, config, ...oryFlowProps }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "OryProvider"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryProviderProps:type",
          "docComment": "/**\n * Props type for the OryProvider component.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryProviderProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    components: "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OryClientConfiguration",
              "canonicalReference": "@ory/elements-react!OryClientConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "OryFlowContainer",
              "canonicalReference": "@ory/elements-react!OryFlowContainer:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryProviderProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OrySelfServiceFlowCard:function(1)",
          "docComment": "/**\n * The `OrySelfServiceFlowCard` component is an umbrella component that can render the self-service flows.\n *\n * Note: prefer using the {@link @ory/elements-react/theme!Login | <Login /> component}, etc. directly instead of this component.\n *\n * It renders different forms based on the current flow state, such as providing an identifier, entering a password or one time code or selecting a method for authentication.\n *\n * The component must be use within an {@link OryProvider} that provides the flow context and components to use.\n *\n * @returns The Ory Two-Step Card component that renders different forms based on the current flow state.\n *\n * @example\n * ```jsx\n * import { OrySelfServiceFlowCard } from \"@ory/elements-react\";\n *\n * function MyComponent() {\n *  return <OryProvider ...>\n *    <OrySelfServiceFlowCard />\n *  </OryProvider>;\n * }\n * ```\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OrySelfServiceFlowCard(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OrySelfServiceFlowCard"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OrySettingsCard:function(1)",
          "docComment": "/**\n * Renders the Ory Settings Card component.\n *\n * This component is used to display the settings flow for the user. It utilizes the `useOryFlow` hook to access the current flow and renders the nodes with components provided by the Ory Elements context.\n *\n * @returns The Ory Settings Card component that renders the settings flow.\n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OrySettingsCard(): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "OrySettingsCard"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OrySettingsFormProps:type",
          "docComment": "/**\n * Props for the OrySettingsFormSection component. This type extends the form element props but omits the `action`, `method`, and `onSubmit` properties.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OrySettingsFormProps = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComponentPropsWithoutRef",
              "canonicalReference": "@types/react!React.ComponentPropsWithoutRef:type"
            },
            {
              "kind": "Content",
              "text": "<\"form\">, \"action\" | \"method\" | \"onSubmit\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OrySettingsFormProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!OrySettingsFormSection:function(1)",
          "docComment": "/**\n * OrySettingsFormSection is a component that provides a form section for Ory settings.\n *\n * Can be used independently to render a form section with Ory nodes.\n *\n * @param props - The properties for the OrySettingsFormSection component.\n *\n * @returns \n *\n * @group\n *\n * Components\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function OrySettingsFormSection({ children, nodes, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "OryFormSectionProps",
              "canonicalReference": "@ory/elements-react!OryFormSectionProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "react_jsx_runtime.JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children, nodes, ...rest }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "OrySettingsFormSection"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OrySettingsPasskeyProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OrySettingsPasskeyProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    triggerButton: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n        onClick: () => void;\n    };\n    removeButtons: ("
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n        onClick: () => void;\n    })[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OrySettingsPasskeyProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OrySettingsRecoveryCodesProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OrySettingsRecoveryCodesProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    codes: string[];\n    regnerateButton: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    revealButton: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    onRegenerate: () => void;\n    onReveal: () => void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OrySettingsRecoveryCodesProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OrySettingsSsoProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OrySettingsSsoProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    linkButtons: ("
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n        onClick: () => void;\n    })[];\n    unlinkButtons: ("
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n        onClick: () => void;\n    })[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OrySettingsSsoProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OrySettingsTotpProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OrySettingsTotpProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    totpImage: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    totpSecret: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    totpInput: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    totpUnlink: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    onUnlink: () => void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OrySettingsTotpProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OrySettingsWebauthnProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OrySettingsWebauthnProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    nameInput: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    triggerButton: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n        onClick: () => void;\n    };\n    removeButtons: ("
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n        onClick: () => void;\n    })[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OrySettingsWebauthnProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!OryToastProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type OryToastProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    message: "
            },
            {
              "kind": "Reference",
              "text": "UiText",
              "canonicalReference": "@ory/client-fetch!UiText:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    id: string | number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "OryToastProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!RecoveryFlowContainer:type",
          "docComment": "/**\n * A flow container for the {@link RecoveryFlow}\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type RecoveryFlowContainer = "
            },
            {
              "kind": "Content",
              "text": "{\n    flowType: "
            },
            {
              "kind": "Reference",
              "text": "FlowType.Recovery",
              "canonicalReference": "@ory/client-fetch!FlowType.Recovery:member"
            },
            {
              "kind": "Content",
              "text": ";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "RecoveryFlow",
              "canonicalReference": "@ory/client-fetch!RecoveryFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "RecoveryFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!RegistrationFlowContainer:type",
          "docComment": "/**\n * A flow container for the {@link RegistrationFlow}\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type RegistrationFlowContainer = "
            },
            {
              "kind": "Content",
              "text": "{\n    flowType: "
            },
            {
              "kind": "Reference",
              "text": "FlowType.Registration",
              "canonicalReference": "@ory/client-fetch!FlowType.Registration:member"
            },
            {
              "kind": "Content",
              "text": ";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "RegistrationFlow",
              "canonicalReference": "@ory/client-fetch!RegistrationFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "RegistrationFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!SettingsFlowContainer:type",
          "docComment": "/**\n * A flow container for the {@link SettingsFlow}\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type SettingsFlowContainer = "
            },
            {
              "kind": "Content",
              "text": "{\n    flowType: "
            },
            {
              "kind": "Reference",
              "text": "FlowType.Settings",
              "canonicalReference": "@ory/client-fetch!FlowType.Settings:member"
            },
            {
              "kind": "Content",
              "text": ";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "SettingsFlow",
              "canonicalReference": "@ory/client-fetch!SettingsFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "SettingsFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!uiTextToFormattedMessage:function(1)",
          "docComment": "/**\n * Converts a UiText to a FormattedMessage. The UiText contains the id of the message and the context. The context is used to inject values into the message from Ory, e.g. a timestamp. For example a UI Node from Ory might look like this:\n * ```json\n * {\n *  \"type\":\"input\",\n *  \"group\":\"default\",\n *  \"attributes\": {\n *      \"name\":\"traits.email\",\n *      \"type\":\"email\",\n *      \"required\":true,\n *      \"autocomplete\":\"email\",\n *      \"disabled\":false,\n *      \"node_type\":\"input\"\n *  },\n *  \"messages\":[],\n *  \"meta\": {\n *    \"label\": {\n *      \"id\":1070002,\n *      \"text\":\"E-Mail\",\n *      \"type\":\"info\",\n *      \"context\":{\n *        \"title\":\"E-Mail\"\n *      },\n *    }\n *  }\n * }\n * ```\n *\n * The context has the key \"title\" which matches the formatter template name \"\\{title\\}\" An example translation file would look like this:\n * ```json\n * {\n *  \"identities.messages.1070002\": \"{title}\"\n * }\n * ```\n *\n * The formatter would then take the meta.label.id and look for the translation with the key matching the id. It would then replace the template \"\\{title\\}\" with the value from the context with the key \"title\".\n *\n * @param uiText - The UiText is part of the UiNode object sent by Kratos when performing a flow.\n *\n * @param intl - The intl object from react-intl\n *\n * @group\n *\n * Utilities\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "uiTextToFormattedMessage: ({ id, context, text }: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UiText",
              "canonicalReference": "@ory/client-fetch!UiText:interface"
            },
            {
              "kind": "Content",
              "text": ", \"type\">"
            },
            {
              "kind": "Content",
              "text": ", intl: "
            },
            {
              "kind": "Reference",
              "text": "IntlShape",
              "canonicalReference": "react-intl!IntlShape:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ id, context, text }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "intl",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "uiTextToFormattedMessage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!useComponents:function(1)",
          "docComment": "/**\n * The `useComponents` hook provides access to the Ory Flow components provided in the `OryComponentProvider`.\n *\n * You can use this hook to access the components defined in the `components` prop of the `OryComponentProvider`.\n *\n * @returns the current component context value.\n *\n * @group\n *\n * Hooks\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useComponents(): "
            },
            {
              "kind": "Reference",
              "text": "OryFlowComponents",
              "canonicalReference": "@ory/elements-react!OryFlowComponents:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useComponents"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!useNodeSorter:function(1)",
          "docComment": "/**\n * The `useNodeSorter` hook provides a way to access the node sorting function\n *\n * The node sorting function is used to determine the order of nodes in a flow based on their attributes and context.\n *\n * To customize the sorting behavior, you can provide a custom `nodeSorter` function to the `OryComponentProvider`.\n *\n * @returns a function that sorts nodes based on the provided context.\n *\n * @group\n *\n * Hooks\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useNodeSorter(): "
            },
            {
              "kind": "Content",
              "text": "(a: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Reference",
              "text": "UiNode",
              "canonicalReference": "@ory/client-fetch!UiNode:interface"
            },
            {
              "kind": "Content",
              "text": ", ctx: {\n    flowType: string;\n}) => number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useNodeSorter"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!useOryConfiguration:function(1)",
          "docComment": "/**\n * The `useOryConfiguration` hook provides access to the Ory Elements configuration.\n *\n * This includes the SDK configuration and the project configuration. To customize the configuration, provide the `sdk` and `project` properties in the `OryConfigurationProvider`.\n *\n * @returns the Ory Elements configuration, which includes the SDK and project configuration.\n *\n * @group\n *\n * Hooks\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useOryConfiguration(): "
            },
            {
              "kind": "Reference",
              "text": "OryElementsConfiguration",
              "canonicalReference": "@ory/elements-react!OryElementsConfiguration:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useOryConfiguration"
        },
        {
          "kind": "Function",
          "canonicalReference": "@ory/elements-react!useOryFlow:function(1)",
          "docComment": "/**\n * Returns an object that contains the current flow and the flow type, as well as the configuration.\n *\n * @returns The current flow container\n *\n * @group\n *\n * Hooks\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function useOryFlow(): "
            },
            {
              "kind": "Reference",
              "text": "FlowContextValue",
              "canonicalReference": "@ory/elements-react!FlowContextValue:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useOryFlow"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@ory/elements-react!VerificationFlowContainer:type",
          "docComment": "/**\n * A flow container for the {@link VerificationFlow}\n *\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type VerificationFlowContainer = "
            },
            {
              "kind": "Content",
              "text": "{\n    flowType: "
            },
            {
              "kind": "Reference",
              "text": "FlowType.Verification",
              "canonicalReference": "@ory/client-fetch!FlowType.Verification:member"
            },
            {
              "kind": "Content",
              "text": ";\n    flow: "
            },
            {
              "kind": "Reference",
              "text": "VerificationFlow",
              "canonicalReference": "@ory/client-fetch!VerificationFlow:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "VerificationFlowContainer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        }
      ]
    }
  ]
}
